{"version":3,"sources":["App.js","index.js"],"names":["App","useState","player_1","setPlayer_1","player_1_minutes","setPlayer_1_minutes","player_1_seconds","setPlayer_1_seconds","player_2","setPlayer_2","player_2_minutes","setPlayer_2_minutes","player_2_seconds","setPlayer_2_seconds","increment","setIncrement","player_1_initial","player_2_initial","isButtonActive","setIsButtonActive","moveCounter1","setMoveCounter1","moveCounter2","setMoveCounter2","isModalOpen","setisModalOpen","current_player","setCurrent_player","playing","setPlaying","savedCallback","useRef","callback","alert","console","log","Math","floor","slice","useEffect","current","id","setInterval","clearInterval","swapPlayer","player","className","onClick","style","backgroundColor","icon","faSyncAlt","faPause","faPlay","faCog","isOpen","onRequestClose","onAfterOpen","contentLabel","content","top","left","right","bottom","marginRight","transform","borderRadius","color","portalClassName","faTimesCircle","type","onChange","e","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.051514e1.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPause } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"react-modal\";\nimport \"./App.css\";\n\nfunction App() {\n  // player_1 doesn't actually change\n  // when this value of player1 changes we rerun the whole function, value !== variable because this variable is a const\n  const [player_1, setPlayer_1] = useState(60000);\n  const [player_1_minutes, setPlayer_1_minutes] = useState(0);\n  const [player_1_seconds, setPlayer_1_seconds] = useState(0);\n\n  const [player_2, setPlayer_2] = useState(60000);\n  const [player_2_minutes, setPlayer_2_minutes] = useState(0);\n  const [player_2_seconds, setPlayer_2_seconds] = useState(0);\n\n  const [increment, setIncrement] = useState(0);\n\n  const [player_1_initial, setPlayer1Initial] = useState(60000);\n  const [player_2_initial, setPlayer2Initial] = useState(60000);\n  const [isButtonActive, setIsButtonActive] = useState(1);\n  const [moveCounter1, setMoveCounter1] = useState(0);\n  const [moveCounter2, setMoveCounter2] = useState(0);\n  const [isModalOpen, setisModalOpen] = useState(false);\n  const [current_player, setCurrent_player] = useState(1);\n  const [playing, setPlaying] = useState(false);\n  const savedCallback = useRef();\n\n  function callback() {\n    if (current_player === 1) {\n      if (player_1 === 0) {\n        alert(\"black wins\");\n        setPlaying(false);\n        console.log((\"0\" + Math.floor((player_1 / 60000) % 60)).slice(-2));\n      } else {\n        setPlayer_1(player_1 - 10);\n      }\n    } else {\n      if (player_2 === 0) {\n        alert(\"white wins\");\n        setPlaying(false);\n      } else {\n        setPlayer_2(player_2 - 10);\n      }\n    }\n  }\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    // if (current_player === 1)\n    let id = null;\n    if (playing) {\n      id = setInterval(() => {\n        savedCallback.current();\n        console.log(\"PLAYER 1:\" + player_1);\n        console.log(\"PLAYER 2:\" + player_2);\n        console.log((\"0\" + Math.floor((player_1 / 60000) % 60)).slice(-2));\n        // setPlayer_1(player_1 - 1);\n      }, 10);\n    } else {\n      clearInterval(id);\n    }\n\n    return () => clearInterval(id);\n  }, [playing]);\n\n  console.log(\"PLAYER 1:\" + player_1);\n  console.log(\"PLAYER 2:\" + player_2);\n\n  const startTimer = () => {\n    return setPlaying(!playing);\n  };\n\n  const swapPlayer = (player) => {\n    console.log(\"here:\", player);\n    if (player === 1 && isButtonActive === 1) {\n      setMoveCounter1((moveCounter1) => moveCounter1 + 1);\n      setPlayer_1((player_1) => player_1 + increment);\n      console.log(\"here\" + player_1_seconds);\n      setIsButtonActive(2);\n      setCurrent_player(2);\n    } else if (player === 2 && isButtonActive === 2) {\n      setPlayer_2((player_2) => player_2 + increment);\n\n      setCurrent_player(1);\n      setIsButtonActive(1);\n      setMoveCounter2((moveCounter2) => moveCounter2 + 1);\n    }\n    // setCurrent_player(player === 1 ? 2 : 1);\n  };\n  console.log(current_player);\n\n  const resetTimer = () => {\n    setPlaying(false);\n    setPlayer_1(player_1_initial);\n    setPlayer_2(player_2_initial);\n    setMoveCounter2(0);\n    setMoveCounter1(0);\n  };\n\n  const setTimer = () => {\n    setPlayer_1(player_1_minutes + player_1_seconds);\n    setPlayer_2(player_2_minutes + player_2_seconds);\n    setisModalOpen(false);\n  };\n\n  const modalStyle = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n      borderRadius: \"25px\",\n      backgroundColor: \"#5A5A5A\",\n      color: \"#FFFFFF\",\n    },\n  };\n\n  return (\n    <div className=\"App\">\n      <div\n        className=\"white\"\n        onClick={() => swapPlayer(1)}\n        style={current_player === 1 ? { backgroundColor: \"orange\" } : null}\n      >\n        <div>\n          {\" \"}\n          <div className=\"move flip\">Move: {moveCounter1}</div>\n          <p className=\"flip\">\n            {(\"0\" + Math.floor((player_1 / 60000) % 60)).slice(-2)}:\n            {(\"0\" + Math.floor((player_1 / 1000) % 60)).slice(-2)}.\n            {(\"0\" + ((player_1 / 10) % 1000)).slice(-2)}\n          </p>{\" \"}\n        </div>\n      </div>\n\n      <div className=\"play\">\n        <a onClick={resetTimer}>\n          {<FontAwesomeIcon icon={faSyncAlt} className=\"icon\" />}\n        </a>\n\n        <a onClick={startTimer}>\n          {playing ? (\n            <FontAwesomeIcon icon={faPause} />\n          ) : (\n            <FontAwesomeIcon icon={faPlay} />\n          )}\n        </a>\n        <a onClick={() => setisModalOpen(true)}>\n          {<FontAwesomeIcon icon={faCog} />}\n        </a>\n      </div>\n\n      <div\n        className=\"black\"\n        onClick={() => swapPlayer(2)}\n        style={current_player === 2 ? { backgroundColor: \"orange\" } : null}\n      >\n        <div>\n          <div>\n            <p>\n              {(\"0\" + Math.floor((player_2 / 60000) % 60)).slice(-2)}:\n              {(\"0\" + Math.floor((player_2 / 1000) % 60)).slice(-2)}.\n              {(\"0\" + ((player_2 / 10) % 1000)).slice(-2)}\n            </p>\n            <div className=\"move\">Move: {moveCounter2}</div>\n          </div>\n        </div>\n      </div>\n\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={() => setisModalOpen(false)}\n        onAfterOpen={() => setisModalOpen(true)}\n        contentLabel=\"Settings\"\n        style={modalStyle}\n        portalClassName=\"modal\"\n      >\n        <span className=\"X\" onClick={() => setisModalOpen(false)}>\n          <FontAwesomeIcon icon={faTimesCircle} />\n        </span>\n        <h1 className=\"center\">SET TIME</h1>\n        <h3 className=\"center player-title\">White</h3>\n        <div className=\"modal-inputs\">\n          <input\n            type=\"text\"\n            onChange={(e) => setPlayer_1_minutes(e.target.value * 60000)}\n          />\n          <span className=\"ms\">m</span>\n          <input\n            type=\"text\"\n            onChange={(e) => setPlayer_1_seconds(e.target.value * 1000)}\n          />\n          <span className=\"ms\">s</span>\n        </div>\n        <h3 className=\"center player-title\">Black</h3>\n        <div className=\"modal-inputs\">\n          <input\n            type=\"text\"\n            onChange={(e) => setPlayer_2_minutes(e.target.value * 60000)}\n          />\n          <span className=\"ms\">m</span>\n          <input\n            type=\"TEXT\"\n            onChange={(e) => setPlayer_2_seconds(e.target.value * 1000)}\n          />\n          <span className=\"ms\">s</span>\n        </div>\n        <div className=\"center modal-inputs\">\n          <h3>Increment</h3>\n          <input\n            type=\"text\"\n            onChange={(e) => setIncrement(e.target.value * 1000)}\n          />{\" \"}\n          <span className=\"ms\">s</span>\n        </div>\n        <div className=\"modal-button\">\n          <button className=\"submit\" onClick={() => setTimer()}>\n            Submit\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}